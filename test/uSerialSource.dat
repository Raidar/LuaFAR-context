--[[ uSerial: Source ]]--

--------------------------------------------------------------------------------
local Data = {
  Vocal = {
    -- Test array with items:
    'a', 'e', 'i', 'o', 'u';
  },

  Konal = {
  },

  Sonor = {
    -- Test array with many items:
    'b', 'd', 'v', 'q', 'z', 'g', 'l', 'm', 'n', 'r';
  },

  Sinel = {
    -- Test array with many items:
    'p', 't', 'f', 'x', 's', 'k', 'c', 'h',
  },

  Hemil = {
    'j', 'y', 'w',
    Test = 1, -- Test order for string with len > 1
  },

  Hemal = {
    -- Test hash with items:
    _Lawel_ = 'w',
    _Yocal_ = 'y',
    _Jonal_ = 'j',
  },

  Order = {
    -- Test table with subarrays:
    Liter = { 'Vocal', 'Konal', 'Hemil' },
    Konal = { 'Sonor', 'Sinel' },
  },

  Liter = {
    -- Test hash:
    Vocal = true,
    Konal = true,
    Sonor = true,
    Sinel = true,
    Hemil = true,
  },

  Yocal = {},

  Jonal = {},

  -- Test empty tables:
  Morfo = {},
  Formo = {},

  ["nil"] = 1,      -- Test serialize reserved words
  ["~Test"] = 1,    -- Test serialize keys with symbols

  -- Test serialize utf-8 strings:
  Locale = "Локализация",
  ["Локальность"] = true,

--[==[
  -- Test long strings:
  string_quot = "Это длинная строка.  \nС переходами на новую строку\tи табуляциями.\nОчень длинная предлинная строка текста для представления строки из большого количества символов.\n  ",
  string_long = [[
Это длинная строка.
С переходами на новую строку	и табуляциями.
Очень длинная предлинная строка текста для представления строки из большого количества символов.
  ]],
  string_lbts = [=[
Это длинная строка.
С переходами на новую строку	и табуляциями.
Очень длинная предлинная строка текста для представления строки из большого количества символов.
Строка также содержит символы '[[' и другие произвольные комбинации символов.
  ]=],
--]==]
  -- Test nested tables in array and hash:
  aTEST = {
    1, 2,
    { 'inner table in array',
      "Это длинная строка - в массиве.  \nС переходами на новую строку\tи табуляциями.\nОчень длинная предлинная строка текста для представления строки из большого количества символов.\n  ",
    },
    4.5, -- Test real number
    { 'new subtable';
      ["some key string"] = "some value string",
      subsubtable = { "test", "subsub" }
    },
    6.000,
    0.00000000000000000000000000001,
    1000000000000034,   -- from Shmuel  == 1000000000000034 --> 1e+015
    2^52, -- maximum integer in number? == 4503599627370496 (4 503 599 627 370 496)
    "integer",
    -2147483648,    -- min longint  ~= 0x80000000
     2147483647,    -- max longint  == 0x7FFFFFFF
     4294967295,    -- max longword == 0xFFFFFFFF
     4294967296,    -- max longword + 1
     4294967295*2 + 1,  -- =      1 FFFF FFFF ==         8 589 934 591
     4294967295*16+15,  -- =      F FFFF FFFF ==        68 719 476 735
    68719476735*16+15,  -- =     FF FFFF FFFF ==     1 099 511 627 775
  1099511627775*16+15,  -- =    FFF FFFF FFFF ==    17 592 186 044 415

 17592186044415*2 + 1,  -- =   1FFF FFFF FFFF ==    35 184 372 088 831
 17592186044415*3 + 2,  -- =   2FFF FFFF FFFF ==    52 776 558 133 247
 17592186044415*4 + 3,  -- =   3FFF FFFF FFFF ==    70 368 744 177 663
 17592186044415*5 + 4,  -- =   4FFF FFFF FFFF ==    87 960 930 222 079
 --17592186044415*5 + 5,  -- =   5000 0000 0000 ==    87 960 930 222 080
 17592186044415*5 + 5 +
    68719476735*16+15,  -- =   50FF FFFF FFFF ==    89 060 441 849 855
 17592186044415*5 + 5 +
  1099511627775*8 + 7,  -- =   57FF FFFF FFFF ==    96 757 023 244 287
  99999999999999,       -- =   5AF3 107A 3FFF
    "real",
 100000000000000,       -- =   5AF3 107A 4000
 17592186044415*6 + 5,  -- =   5FFF FFFF FFFF ==   105 553 116 266 495 --> 1.055531162665e+014
 17592186044415*7 + 6,  -- =   6FFF FFFF FFFF ==   123 145 302 310 911 --> 1.2314530231091e+014
 17592186044415*8 + 7,  -- =   7FFF FFFF FFFF ==   140 737 488 355 327 --> 1.4073748835533e+014
 17592186044415*16+15,  -- =   FFFF FFFF FFFF ==   281 474 976 710 655 --> 2.8147497671066e+014
281474976710655*16+15,  -- = F FFFF FFFF FFFF == 4 503 599 627 370 495 --> 4.5035996273705e+015

    nested = { 1, 3.3333, "nest" }, -- Test real number in subarray
    [0.6667] = 1/7,
  },

} --- Data

-- [[ Test self-references:
Data.selfref = Data.Hemal
Data.Order.selfref = Data.Liter
Data.deepref = Data.Order.Konal
Data.Order.aTEST_3 = Data.aTEST[3]
--]]

--------------------------------------------------------------------------------
return Data
--------------------------------------------------------------------------------
